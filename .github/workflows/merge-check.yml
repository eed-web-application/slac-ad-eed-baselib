name: MergeCheck
on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
      - name: Manage Version
        run: |
          echo "Modify build.gradle for with version number \"$GitVersion_Major.$GitVersion_Minor.$GitVersion_Patch-$GitVersion_PreReleaseLabel\""
          sed -i "s#^.*version.*=.*#version = '$GitVersion_Major.$GitVersion_Minor.$GitVersion_Patch-$GitVersion_PreReleaseLabel'#" build.gradle
          cat build.gradle
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      - name: Build project
        uses: gradle/gradle-build-action@v2
        env:
          CI: true
        with:
          arguments: assemble
      - name: Test Project
        uses: gradle/gradle-build-action@v2
        env:
          CI: true
        with:
          arguments: test
      - name: Delete Pre-Release Maven Package
        env:
          GH_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PACKAGE_NAME="edu.stanford.slac.slac-ad-eed-baselib"
          PACKAGE_VERSION="your-package-version"  # Replace with the specific version
          OWNER="your-username-or-org"  # Replace with your GitHub username or organization
          REPO="your-repo-name"  # Replace with your repository name
          
          # Get the package ID
          PACKAGE_ID=$(curl -s -H "Authorization: token $GH_PAT" \
            "https://api.github.com/orgs/$OWNER/packages/maven/$REPO/$PACKAGE_NAME/versions" \
            | jq -r --arg VERSION "$PACKAGE_VERSION" '.[] | select(.name == $VERSION) | .id')
          
          echo "Package ID: $PACKAGE_ID"
            
            if [ -n "$PACKAGE_ID" ]; then
          # Delete the package version
          RESPONSE=$(curl -X DELETE -H "Authorization: token $GH_PAT" \
            "https://api.github.com/orgs/$OWNER/packages/maven/$REPO/$PACKAGE_NAME/versions/$PACKAGE_ID")
          
          echo "Delete response: $RESPONSE"
            echo "Deleted package version $PACKAGE_VERSION"
            else
            echo "Package version $PACKAGE_VERSION not found"
            fi
      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
